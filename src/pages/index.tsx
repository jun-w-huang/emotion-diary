import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import { api } from "~/utils/api";
import CreateEmotionRHF from "~/components/CreateEmotionRHF";
import Calendar from "~/components/Calendar";

/* TODO: 
1. Handle Loading,
2. Create RHF
3. Physical symptom, can select multiple.
4. refactor Form functions outside component body if they aren't necessary
5. ADD TOAST FOR FORM ERROR SUBMISSION, on TRPC side... not client side...
3. Create ability to click CalendarCells for detailed view.
4. CALENDAR SWAP TO DAILY VIEW / WEEKLY VIEW

*/

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.emotionEvent.getAll.useQuery();

  const [showingModal, isShowingModal] = useState<boolean>(false);

  if (isLoading) {
    return <div> is Loading... </div>;
  }

  return (
    <>
      <Head>
        <title>Emotion Diary</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="flex min-h-screen flex-col items-center justify-center">
        <div>
          <button
            className="rounded-lg border bg-slate-500 px-4 text-white"
            onClick={(e) => isShowingModal(true)}
          >
            +
          </button>
          {showingModal && (
            <CreateEmotionRHF closeModal={() => isShowingModal(false)} />
          )}
          {data && <Calendar events={data} />}
        </div>

        {user.isSignedIn ? <SignOutButton /> : <SignInButton />}
      </main>
    </>
  );
};

export default Home;
